* Вариант чтения с read большими кусками заместо mmap.
  Возможно нужно будет изменить только m(un)map_wrapper.
* io for write.
* uint_fast_64_t и uint_fast32_t получать по значению, а не по const*.
* комментарии *.h -> *.c, дублируем.
* собирать вывод в область, кратную 32 байтам (uchar x[32*size]),
  писать одним write по наполнению или концу работы с буфером (хотя много
  выводить, вроде, не надо будет).
* valgrind, утечки, cppcheck, clang --analyze.
* м.б. выставлять eof по принципу «если следующий байт не м.б. прочитан»? Тогда цикл обработки упрощается:
  while (!rs.eof) { if (read_...() < 1) {error} processing(); }
* /dev/random and CryptGetRandom()
* Управление ключами (чтение, генерация в файл).
* В ioutils возвращать не bool, а более осмысленное число, проверять макросами вроде IOERR(x).
